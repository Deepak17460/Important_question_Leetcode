using Hashmap
Time complexity is O(n) & space Complexity is O(1)

class Solution {
public:
    int romanToInt(string s) {
        int ans = 0;
        unordered_map<char, int> um;
        um['I'] = 1;
        um['V'] = 5;
        um['X'] = 10;
        um['L'] = 50;
        um['C'] = 100;
        um['D'] = 500;
        um['M'] = 1000;
        // Finding the length of String
        int n = s.length();
        for(int i = 0; i < n; i++) 
        {
            if(i<n-1&& um[s[i]] < um[s[i+1]])
            {
                ans += um[s[i+1]] - um[s[i]];  // Next value is greater than prev
                i++;
            }
            else {

                ans += um[s[i]];   // next value is less than prev
            }
        } 
        
        return ans;
    }
};
